@page "/Login"

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


<EditForm Model="@user" OnValidSubmit="@ValidateUser">
    <div>
        <br /><br /><br /><br /><br />
    </div>
    <div>
        <h3 style="font-weight: bold; color: purple">Login</h3>
    </div>
    <div>
        <br />
    </div>
    <div class="col-6 row">
        <input class="form-control col-6" @bind="user.EmailAddress" placeholder="email address" />
    </div>
    <br />
    <div class="col-6 row">
        <input type="password" class="form-control col-6" @bind="user.Password" placeholder="password" />
    </div>
    <br />
    <div class="col-6 row">
        <input type="submit" class="form-control col-6 btn btn-primary" value="Login" />
    </div>

</EditForm>


@code {

    private User user;

    protected override Task OnInitializedAsync()
    {
        user = new User
               {
                   EmailAddress = "hans.imboden@m-s.ch",
                   Password = "123456"
               };

        return base.OnInitializedAsync();
    }

    private async Task<bool> ValidateUser()
    {
        ((CustomAuthenticationStateProvider) AuthenticationStateProvider).MarkUserAsAuthenticated(user.EmailAddress);
        NavigationManager.NavigateTo("/");

        return await Task.FromResult(true);
    }
}